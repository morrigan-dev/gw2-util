# Release build-job
#
# Erzeugt ein neues Release. Dabei werden mehrer Schritte durchlaufen:
#  1. Prüfung, ob ein Release möglich ist und Durchführung der Erstellung des Releases
#     -> http://maven.apache.org/maven-release/maven-release-plugin/examples/prepare-release.html
#  2. Release veröffentlichen
#     -> http://maven.apache.org/maven-release/maven-release-plugin/examples/perform-release.html
# Sollte es während der Erstellung zu Fehlern kommen, wird das Release zurückgerollt
# -> http://maven.apache.org/maven-release/maven-release-plugin/examples/rollback-release.html
#
# Voraussetzungen:
# - Nutzung des artifactory-maven-plugin Plugins
# - Benutzer des Artifactories in den Secrets unter ARTIFACTORY_USERNAME hinterlegt
# - Token des Benutzers des Artifactories in den Secrets unter ARTIFACTORY_TOKEN hinterlegt
# - Es handelt sich bei dem branch um den master branch
#
# Dieser Job kann nur manuell angestoßen werden.

name: Run release build-job
on: [workflow_dispatch]
jobs:

  # Erstellung eines neuen Releases
  build-release:

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Configure git
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"
      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v11
        with:
          servers: '[{ "id": "releases-repo", "username": "${{ secrets.ARTIFACTORY_USERNAME }}", "password": "${{ secrets.ARTIFACTORY_TOKEN }}" }, { "id": "snapshots-repo", "username": "${{ secrets.ARTIFACTORY_USERNAME }}", "password": "${{ secrets.ARTIFACTORY_TOKEN }}" }]'
          repositories: '[{ "id": "releases-repo", "name": "morrigan-libs-release-local", "url": "https://morrigan.jfrog.io/artifactory/morrigan-libs-release-local/", "releases.enabled": "true", "snapshots.enabled": "false" }, { "id": "snapshots-repo", "name": "morrigan-libs-snapshot-local", "url": "https://morrigan.jfrog.io/artifactory/morrigan-libs-snapshot-local/", "releases.enabled": "false", "snapshots.enabled": "true" }]'
      - name: Build with Maven
        run: |
          mvn -B package --file client/pom.xml
          mvn -B package --file server/pom.xml
      - name: Prepare the release
        run: |
          mvn -B release:prepare --file client/pom.xml
          mvn -B release:prepare --file server/pom.xml
      - name: Push the release
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN }}
        run: |
          mvn -B release:perform --file client/pom.xml
          mvn -B release:perform --file server/pom.xml
      - name: Rollback if failure
        if: ${{ failure() }}
        run: |
          mvn -B release:rollback --file client/pom.xml
          mvn -B release:rollback --file server/pom.xml
